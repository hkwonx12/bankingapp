volumes:
  jwtdown-db-data:
    external: true

services:
  fastapi:
    build:
      context: api
      dockerfile: Dockerfile.dev
    ports:
      - 8000:8000
    volumes:
      - ./api:/app
    environment:
      SIGNING_KEY: 1303a69a0b8872426e38062b143bb9216fab0884d8eef965a61f1511a4255d0b26359de0bb39b4a55bd48a42dd0650172f750f43ad47bdbba3c529b8db001e300e5a2321aa6be82d63ade8ab4e5b870e8a4627205b83d21fa529aece4ae8a5cd82a3ea6e80f30a79bf2080a1240a9543aff694c812504307a5fabc559cc77f3b4c55efb8d4f986c83be68542d40e9a48458155faa59a078bd208f9430e2ab5275f2a73694796882f383ec5bb9b313df0469457789c12f8616ea26cf8880e1f2d104c30d87c36c92d9cf477c45bb37ca3044c94d2e595525f8248730e524a50378fe46ea34d89d4fdd46c07fed2b5122d7f9f4d674f4be497fabed24bc79aef5e
      WAIT_HOSTS: db:5432
      WAIT_BEFORE: 5
      WAIT_TIMEOUT: 60
      DATABASE_URL: postgresql://postgresuser:postgrespassword@db/postgres

  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_SAMPLE_SERVICE_API_HOST: http://localhost:8000


  db:
    image: postgres:14.2-bullseye
    volumes:
      - jwtdown-db-data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    env_file:
      - ./.env
    ports:
      - 15432:5432
